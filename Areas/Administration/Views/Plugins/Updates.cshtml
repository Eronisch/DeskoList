@using Localization.Languages.Admin.Views.Plugin
@using Web.Bootstrap
@model Topsite.Areas.Administration.Models.Settings.SettingsUpdateModel

<div id="updates">

    <div id="alertHolder">
        @if (Model.UpdatesAvailable)
        {
            @Html.GenerateInfo(Model.SingleUpdateAvailable ? Updates.SingleUpdateAvailableTitle : Updates.MultipleUpdatesAvailableTitle, Model.SingleUpdateAvailable ? Localization.Languages.Admin.Views.Widgets.Updates.SingleNotLatestVersionDescription : Localization.Languages.Admin.Views.Widgets.Updates.MultipleNotLatestVersionDescription, displayIcon: true, hasCloseIcon: false)
        }
        else
        {
            @Html.GenerateSuccess(Updates.NoUpdatesAvailableTitle, Updates.NoUpdatesAvailableDescription, displayIcon: true, hasCloseIcon: false)
        }
    </div>

    <div class="clearfix">
        <button id="installUpdates" class="btn btn-default btn-sm pull-right">@Updates.InstallUpdates</button>
    </div>

    <h3>@Updates.PluginUpdates</h3>

    <p id="dateCheckedForUpdates">
        @{Html.RenderPartial("_DateLastChecked", Model.LastCheckedForUpdates);}
    </p>

    <h3>@Updates.AvailableUpdates</h3>

    <div id="pluginUpdates">
        @{ Html.RenderAction("GetAvailableSystemUpdates"); }
    </div>

</div>

@section Footer{
    <script src="~/Areas/Administration/Content/Javascript/SettingUpdates.js"></script>

    <script>
        $(document).ready(function () {
            settingsUpdater({
                AlertUpToDateHtml: "@Html.GenerateSuccess(Updates.NoUpdatesAvailableTitle, Updates.NoUpdatesAvailableDescription, displayIcon: true, hasCloseIcon: false)",
                AlertMultipleUpdatesInstalledHtml: "@Html.GenerateSuccess(Updates.MultipleUpdateInstalledTitle, Updates.MultipleUpdateInstalledDescription, displayIcon: true, hasCloseIcon: false)",
                AlertSingleUpdateInstalledHtml: "@Html.GenerateSuccess(Updates.SingleUpdateInstalledTitle, Updates.SingleUpdateInstalledDescription, displayIcon: true, hasCloseIcon: false)",
                AlertMultipleUpdatesAvailableHtml: "@Html.GenerateInfo(Updates.MultipleUpdatesAvailableTitle, Updates.MultipleNotLatestVersionDescription, displayIcon: true, hasCloseIcon: false)",
                AlertSingleUpdateAvailableHtml: "@Html.GenerateInfo(Updates.SingleUpdateAvailableTitle, Updates.SingleNotLatestVersionDescription, displayIcon: true, hasCloseIcon: false)",
                AlertUpdatingFailedHtml: "@Html.GenerateError(Updates.UpdatingFailedTitle, Updates.UpdatingFailedDescription, displayIcon: true, hasCloseIcon: false)",
                CheckingForUpdatesText: "@Updates.CheckingForUpdates",
                DownloadingUpdatesText: "@Updates.DownloadingUpdates",
                InstallingUpdatesText: "@Updates.InstallingUpdatesButton",
                InstallUpdatesText: "@Updates.InstallUpdates",
                UpdateStatus: "@Model.StatusUpdates",
                IsChecking: "@Model.IsChecking",
                IsDownloading: "@Model.IsDownloading",
                IsInstalling: "@Model.IsInstalling",
                IsInstallingLink: "/Administration/Plugin/IsInstallingSoftware",
                IsDownloadingLink: "/Administration/Plugin/IsDownloadingSoftware",
                IsCheckingLink: "/Administration/Plugin/IsCheckingSoftware",
                GetDateCheckedLink: "/Administration/Plugin/GetDateChecked",
                GetAvailableUpdatesStatusLink: "/Administration/Plugin/GetUpdateAvailableStatus",
                GetAvailableUpdatesLink: "/Administration/Plugin/GetAvailableSystemUpdates",
                GetDownloadProgressLink: "/Administration/Plugin/GetDownloadProgress",
                InstallUpdatesLink: "/Administration/Plugin/InstallUpdates",
                UpdatingStatusLink: "/Administration/Plugin/GetUpdatingStatus",
                IsUpdatedSuccessfullyLink: "/Administration/Plugin/WasUpdatingSuccess",
                AvailableUpdatesContainer: "#pluginUpdates",
                InstallButton: "#installUpdates",
                DateCheckedContainer: "#dateCheckedForUpdates",
                AlertContainer: "#alertHolder",
                IsThirdParty: true
            });
        });
    </script>
}
